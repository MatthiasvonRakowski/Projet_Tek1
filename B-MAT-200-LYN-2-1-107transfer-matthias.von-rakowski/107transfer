#!/bin/python3
## EPITECH PROJECT, 2023
## 107transfer
## File description:
## well, real programmers use ed
##

import sys

def function(args, x) -> float:
    a = 0.0
    a_sol = 1.0
    b = 0.0
    b_sol = 1.0
    for i in range(0, len(args), 2):
        a = 0.0
        for j in range(len(args[i])):
            a += (float(args[i][j]) * x ** j)
        a_sol *= a
    for i in range(1, len(args), 2):
        b = 0.0
        for j in range(len(args[i])):
            b += (float(args[i][j]) * x ** j)
        if abs(b) < 1e-9:
            exit(84)
        b_sol *= b
    return a_sol / b_sol


def print_soluce(soluce):
    for i in range(len(soluce)):
        print("%.3f -> %.5f" % ((i / 1000), soluce[i]))


def transfer(args):
    i = 0.0
    result = []
    while i < 1 + 1e-8:
        result.append(function(args, i))
        i += 0.001
    return result


def verif_args(args):
    if len(args) % 2 == 0 or len(args) < 2:
        exit(84)
    for i in range(1, len(args)):
        if args[i][0] == '*':
            exit(84)
        for j in range(len(args[i])):
            if not ((args[i][j] == '*' and j + 1 < len(args[i]) and args[i][j + 1] != '*' ) or args[i][j].isdigit()):
                exit(84)
    arr = []
    for i in range(1, len(args)):
        temp = [int(num) for num in args[i].split("*")]
        arr.append(temp)
        if i % 2 == 0:
            a = 0.0
            for j in range(len(arr[i - 1])):
                a += arr[i - 1][j]
            if abs(a) < 1e-7:
                exit(84)
    return arr


def main():
    args = verif_args(sys.argv)
    soluce = transfer(args)
    print_soluce(soluce)

if __name__ == "__main__":
    main()
