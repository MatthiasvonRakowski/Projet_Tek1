#!/bin/python3
# EPITECH PROJECT, 2022
# 104intersection
# File description:
# 104intersection
#
from verif_args import *
from all_mode import *
from print_result import *


def which_mode(args, pt, vt, sol):
    if args[1] == 1:
        if args[8] > 0:
            print("Sphere of radius %d" % args[8])
            print_point_and_vector(pt, vt)
            mode_sphere(pt, vt, args[8]**2, sol)
        else:
            print("Radius < 0, invalid size")
            sys.exit(84)

    elif args[1] == 2:
        if args[8] > 0:
            print("Cylinder of radius %d" % args[8])
            print_point_and_vector(pt, vt)
            mode_cylinder(pt, vt, args[8]**2, sol)
        else:
            print("Radius < 0, invalid size")
            sys.exit(84)

    elif args[1] == 3:
        if 0 < args[8] < 90:
            print("Cone with a %d degree angle" % args[8])
            print_point_and_vector(pt, vt)
            mode_cone(pt, vt, ma.tan(ma.radians(args[8]))**2, sol)
        else:
            print("Invalid angle's size")
            sys.exit(84)
    else:
        print("Retry with the option -h")
        sys.exit(84)


def main():
    args = verif_args(sys.argv)
    pt = [args[2], args[3], args[4]]
    vt = [args[5], args[6], args[7]]
    sol = []
    which_mode(args, pt, vt, sol)
    print_solution(pt, vt, sol)
    sys.exit(0)


if __name__ == "__main__":
    main()
